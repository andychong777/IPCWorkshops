///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #2 (P2)
Full Name  : Andy Chong
Student ID#: 150558229
Email      : achong11@myseneca.ca
Section    : NAA

Authenticity Declaration:

I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

1. Price1 and the corresponding converted cent value does not properly represent the intended value because the value of price 1 is being stored as a float. Price 1 is expected to be 17.96 but because it is a float it has limited precision. As for all the other samples they work as expected because their value is stored as doubles.

2. First the code declares the variable 'money' as an int with the value of 7245. There is a type coercion when the value 'money' is divided by 100.0, as it will automatically promote the variable into a double before doing the division. In the second example the value money is casted into a double before the division. Implicit type conversion is used as the commplier automatically changes when more than 1 data type is present in the expression.

3.	
	a) The value of the variable result would be 72 because int divided by int is always an integer. This process is called truncation. It takes out the decimal and only calculates the whole number.
	
	b)Sample 1: $72.45
	  Sample 2: 72
	  Sample 3: $72.00
	  Sample 4: 72

	c)Samples 1 and 3 don't work as expected because the function is expecting it to be a double, hence the 2 decimal places. in 1,3 the input is wanting a double but the values are integers so the computer implicitly prints them with 2 decimal places.	






